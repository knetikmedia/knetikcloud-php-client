<?php
/**
 * GamificationAchievementsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  KnetikCloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Knetik Platform API Documentation latest
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace KnetikCloud;

use \KnetikCloud\Configuration;
use \KnetikCloud\ApiException;
use \KnetikCloud\ObjectSerializer;

/**
 * GamificationAchievementsApiTest Class Doc Comment
 *
 * @category Class
 * @package  KnetikCloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GamificationAchievementsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createAchievement
     *
     * Create a new achievement definition.
     *
     */
    public function testCreateAchievement()
    {
    }

    /**
     * Test case for createAchievementTemplate
     *
     * Create an achievement template.
     *
     */
    public function testCreateAchievementTemplate()
    {
    }

    /**
     * Test case for deleteAchievement
     *
     * Delete an achievement definition.
     *
     */
    public function testDeleteAchievement()
    {
    }

    /**
     * Test case for deleteAchievementTemplate
     *
     * Delete an achievement template.
     *
     */
    public function testDeleteAchievementTemplate()
    {
    }

    /**
     * Test case for getAchievement
     *
     * Get a single achievement definition.
     *
     */
    public function testGetAchievement()
    {
    }

    /**
     * Test case for getAchievementTemplate
     *
     * Get a single achievement template.
     *
     */
    public function testGetAchievementTemplate()
    {
    }

    /**
     * Test case for getAchievementTemplates
     *
     * List and search achievement templates.
     *
     */
    public function testGetAchievementTemplates()
    {
    }

    /**
     * Test case for getAchievementTriggers
     *
     * Get the list of triggers that can be used to trigger an achievement progress update.
     *
     */
    public function testGetAchievementTriggers()
    {
    }

    /**
     * Test case for getAchievements
     *
     * Get all achievement definitions in the system.
     *
     */
    public function testGetAchievements()
    {
    }

    /**
     * Test case for getDerivedAchievements
     *
     * Get a list of derived achievements.
     *
     */
    public function testGetDerivedAchievements()
    {
    }

    /**
     * Test case for getUserAchievementProgress
     *
     * Retrieve progress on a given achievement for a given user.
     *
     */
    public function testGetUserAchievementProgress()
    {
    }

    /**
     * Test case for getUserAchievementsProgress
     *
     * Retrieve progress on achievements for a given user.
     *
     */
    public function testGetUserAchievementsProgress()
    {
    }

    /**
     * Test case for getUsersAchievementProgress
     *
     * Retrieve progress on a given achievement for all users.
     *
     */
    public function testGetUsersAchievementProgress()
    {
    }

    /**
     * Test case for getUsersAchievementsProgress
     *
     * Retrieve progress on achievements for all users.
     *
     */
    public function testGetUsersAchievementsProgress()
    {
    }

    /**
     * Test case for incrementAchievementProgress
     *
     * Increment an achievement progress record for a user.
     *
     */
    public function testIncrementAchievementProgress()
    {
    }

    /**
     * Test case for setAchievementProgress
     *
     * Set an achievement progress record for a user.
     *
     */
    public function testSetAchievementProgress()
    {
    }

    /**
     * Test case for updateAchievement
     *
     * Update an achievement definition.
     *
     */
    public function testUpdateAchievement()
    {
    }

    /**
     * Test case for updateAchievementTemplate
     *
     * Update an achievement template.
     *
     */
    public function testUpdateAchievementTemplate()
    {
    }
}
